#!/sbin/openrc-run
#
# Copyright 2018 LNCM
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

depend() {
    need net sshd iotwifi
}

start() {
    ebegin "Starting LNCM installation"
    # This script will only run once, for persistent installation to SD

    # LNCM version
    VER="v0.3.0"

    # Device to partition
    SD=mmcblk0

    # Offset for second partition
    START=268M

    if [ -f /media/${SD}p1/installed ]; then
        echo "Already installed, aborting"
        exit 1
    fi

    # Fetch current mirror URL
    #MIR="$(cat /etc/apk/repositories | sed -n 2p)"

    # Check if main mirror is reachable
    net_check() {
        ONLINE=$(echo -e 'GET http://dl-cdn.alpinelinux.org/alpine/ HTTP/1.0\n\n' | nc dl-cdn.alpinelinux.org 80 > /dev/null 2>&1; echo $?)
    }

    ONLINE=1

    while [ $ONLINE -eq 1 ]
    do
        echo "Checking for internet connection..."
        net_check
        sleep 1
    done

    if [ $ONLINE -eq 0 ]; then
        echo "Online, proceeding with installation"

        echo "Add partitioning and filesystem tools"
        /sbin/apk add parted e2fsprogs

        echo "Create second primary partition"
        /usr/sbin/parted -s /dev/$SD mkpart p ext4 $START 100%

        echo "Create and mount ext4 filesystem"
        /sbin/mkfs.ext4 -F /dev/${SD}p2 && \
        /bin/echo "/dev/${SD}p2 /media/sd ext4 noatime 0 0" >> /etc/fstab && \
        /bin/mkdir /media/sd && \
        /bin/mount /media/sd

        echo "Persist state to apkovl"
        /sbin/lbu commit && \
        echo "Install to /media/sd and apply apkovl" && \
        /sbin/setup-disk -o /media/mmcblk0p1/box.apkovl.tar.gz /media/sd

        echo "Add FAT partition to new fstab"
        /bin/echo "/dev/mmcblk0p1 /media/mmcblk0p1 vfat defaults 0 0" >> /media/sd/etc/fstab

        echo "Remove unused devices and mountpoints"
        /bin/sed -i '/cdrom/d' /media/sd/etc/fstab && \
        /bin/rmdir /media/sd/media/cdrom
        /bin/sed -i '/usbdisk/d' /media/sd/etc/fstab && \
        /bin/rmdir /media/sd/media/usb
        /bin/rmdir /media/sd/media/floppy

        echo "Create lncm home dir"
        /bin/mkdir /media/sd/home/lncm
        /bin/chown lncm:lncm /media/sd/home/lncm

        # Boot installation
        echo "Re-mount FAT partition read/write"
        /bin/mount -o remount,rw /dev/${SD}p1 /media/${SD}p1 && \
        echo "Prepend root partition to boot command" && \
        /bin/sed -e 's/^/root=\/dev\/mmcblk0p2 /' -i /media/${SD}p1/cmdline.txt && \
        echo "Backup old boot files" && \
        /bin/mkdir /media/mmcblk0p1/boot_backup && \
        /bin/mv /media/mmcblk0p1/boot/* /media/mmcblk0p1/boot_backup/ && \
        echo "Remove old boot files on fat partition" && \
        /bin/rm -rf /media/mmcblk0p1/boot/* && \
        echo "Copy new boot files to fat partition" && \
        /bin/cp /media/sd/boot/* /media/mmcblk0p1/boot/ && \
        echo "Delete new boot dir" && \
        /bin/rm -rf /media/sd/boot && \
        echo "Link boot to fat partition" && \
        cd /media/sd && \
        /bin/ln -s /media/mmcblk0p1 boot

        echo "Mark SD card with installed version"
        /bin/echo "$VER" > /media/${SD}p1/installed && \
        echo "Re-mount FAT partition read-only" && \
        /bin/mount -o remount,ro /dev/${SD}p1 /media/${SD}p1

        echo "Create and install swap file"
        /bin/dd if=/dev/zero of=/media/sd/var/cache/swap bs=1M count=1024 && \
        /bin/chown 600 /media/sd/var/cache/swap && \
        /sbin/mkswap /media/sd/var/cache/swap && \
        /sbin/swapon /media/sd/var/cache/swap && \
        /bin/echo "/var/cache/swap none swap sw,pri=10 0 0" >> /media/sd/etc/fstab && \
        echo "Enable swap at boot"
        cd /media/sd/etc/runlevels/boot
        /bin/ln -s /media/sd/etc/init.d/swap swap

        echo "Deactivate LNCM installation script"
        /sbin/rc-update del lncm default && \
        echo "Persist final state to apkovl" && \
        /sbin/lbu commit
        
        exit 0
    else
        echo "No internet connection. Aborting installation!"
        exit 1
    fi
 
    # Install docker-compose
    #/sbin/apk add py3-pip
    #/usr/bin/pip3 install --upgrade pip
    #/usr/bin/pip3 install docker-compose

    # Backup apkovl.tar.gz to USB storage
    #/sbin/lbu pkg /media/usb

    eend $?
}
