#!/bin/sh

# Node management tool
wait_lnd_stopped() {
    WAITLNDSTOPPED=1
    while [ $(docker ps | grep -c compose_lndbox_1) == 1 ] && [ $WAITLNDSTOPPED -lt 10 ];
    do
        echo "Waiting for LND to terminate..."
        let WAITLNDSTOPPED=WAITLNDSTOPPED+1;
        sleep 2
    done
}
wait_bitcoind_stopped() {
    WAITBTCSTOPPED=1
    while [ $(docker ps | grep -c compose_btcbox_1) == 1 ] && [ $WAITBTCSTOPPED -lt 10 ];
    do
        echo "Waiting for bitcoind to terminate..."
        let WAITBTCSTOPPED=WAITBTCSTOPPED+1;
        sleep 2
    done
}

if [ "$1" = "info" ]; then
  # bitcoind and lnd information
  echo "bitcoind info:"
  docker exec -it compose_btcbox_1 bitcoin-cli -getinfo
  echo "lnd info:"
  docker exec -it compose_lndbox_1 lncli getinfo
elif [ "$1" = "unlock" ]; then
  # unlock lnd wallet
  docker exec -it compose_lndbox_1 lncli unlock
elif [ "$1" = "create" ]; then
  # Use create wallet script. This will either import an existing seed (or our own generated one), or use LND to create one. It will also create a password either randomly or use an existing password provided)
  /usr/local/sbin/lncm-createwallet.py
elif [ "$1" = "start" ]; then
  service docker-compose start
elif [ "$1" = "stop" ]; then
  echo "Attempting clean shutdown of bitcoind and lnd nodes"
  docker exec -it compose_lndbox_1 lncli stop
  docker exec -it compose_btcbox_1 bitcoin-cli stop
  wait_lnd_stopped
  wait_bitcoind_stopped
  # Stop docker compose
  service docker-compose stop
elif [ "$1" = "restart" ]; then
  echo "Attempting clean shutdown of bitcoind and lnd nodes"
  docker exec -it compose_lndbox_1 lncli stop
  docker exec -it compose_btcbox_1 bitcoin-cli stop
  wait_lnd_stopped
  wait_bitcoind_stopped  
  service docker-compose restart
elif [ "$1" = "btclog" ]; then
  # slow, robust method
  #docker logs -f compose_btcbox_1
  tail -f /media/volatile/bitcoin/debug.log
elif [ "$1" = "lndlog" ]; then
  # slow, robust method
  #docker logs -f compose_lndbox_1
  tail -f /media/volatile/lnd/logs/bitcoin/mainnet/lnd.log
elif [ "$1" = "temp" ]; then
  # CPU temperature
  cpu=$(cat /sys/class/thermal/thermal_zone0/temp)
  echo "CPU: $((cpu/1000))C"
else
  echo -e "Mana: node management\n"
  echo "Must pass one of:"
  echo "info, unlock, create, stop, start, restart, btclog, lndlog, temp"
fi
